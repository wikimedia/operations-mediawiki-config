#!/usr/bin/env php
<?php

error_reporting( E_ALL );
require_once( __DIR__ . '/MWRealm.php' );
/*
 * Populate wikiversions.cdb file using all the items in all.dblist
 * as keys, each having a value of the specified MediaWiki version.
 * This means that all will be configured to run that version.
 *
 * The first argument is the version, typically of the format "php-X.XX".
 * The second argument is a confirmation ("confirm").
 *
 * @return void
 */
function populateWikiversionsCDB() {
	global $argv;
	$common = '/srv/deployment/mediawiki/common';

	$argsValid = false;
	if ( count( $argv ) >= 3 && $argv[2] === 'confirm' ) {
		$version = $argv[1]; // e.g. "php-X.XX"
		if ( preg_match( '/^php-(?:\d+\.\d+|trunk)(?:-\d)?$/', $version ) ) {
			$argsValid = true;
		}
	}

	if ( !$argsValid ) {
		die( "Usage: populateWikiVersionsCDB.php php-X.XX\n" );
	}

	$path = getRealmSpecificFilename( "$common/all.dblist" );
	$dbList = array_filter( explode( "\n", file_get_contents( $path ) ) );
	if ( !count( $dbList ) ) {
		die( "Unable to read $path.\n" );
	}

	$datList = "";
	foreach ( $dbList as $dbName ) {
		$datList .= "$dbName $version\n";
	}

	# Create wikiversions.dat...
	$path = getRealmSpecificFilename( MULTIVER_CDB_DIR_HOME . '/wikiversions.dat' );
	if ( !file_put_contents( $path, $datList ) ) {
		die( "Unable to write to $path.\n" );
	}
	# Rebuild wikiversions.cdb...
	shell_exec( "cd $common/multiversion && ./refreshWikiversionsCDB" );
}

populateWikiversionsCDB();
