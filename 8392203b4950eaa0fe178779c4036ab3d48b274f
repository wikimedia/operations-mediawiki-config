{
  "comments": [
    {
      "key": {
        "uuid": "4e506ba4_67302b54",
        "filename": "wmf-config/CommonSettings.php",
        "patchSetId": 6
      },
      "lineNbr": 77,
      "author": {
        "id": 3215
      },
      "writtenOn": "2017-04-25T11:10:27Z",
      "side": 1,
      "message": "I\u0027m not super familiar with wmf-config, but is not clear to me how we keep one DC in read-only while the other in read-write with this single variable. Do we check if the master datacenter is the same of the host\u0027s datacenter?\n\nOr should we gather from Etcd two distinct $wgReadOnly for the two db-$DC.php configuration files?",
      "revId": "8392203b4950eaa0fe178779c4036ab3d48b274f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e4df70f_7d3d8ab7",
        "filename": "wmf-config/CommonSettings.php",
        "patchSetId": 6
      },
      "lineNbr": 77,
      "author": {
        "id": 34
      },
      "writtenOn": "2017-04-27T01:11:18Z",
      "side": 1,
      "message": "We already do. But instead of manually calling has()/get() twice, we use the etc directory/namespace. See above where we have two namespaces. Once per-dc and one global. One overrides the other. I assume the idea is that readonly is per-dc and masterdc is global.\n\nBut if that\u0027s the case, perhaps we could consolidate them so that they are cached together and just move it to the get call here? That means using a slash in has() and get() which may be odd for a Config instance, but I don\u0027t think there\u0027s anything against that.\n\nDoing so would also address my previous CR comment about this making 2 http requests instead of 1 and storing it in two separate apc entries. Which isn\u0027t too bad, but doesn\u0027t match the original intent of \"all values\" (2) being fetched and stored from a single snapshot.",
      "parentUuid": "4e506ba4_67302b54",
      "revId": "8392203b4950eaa0fe178779c4036ab3d48b274f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e506ba4_71a6a9bf",
        "filename": "wmf-config/CommonSettings.php",
        "patchSetId": 6
      },
      "lineNbr": 78,
      "author": {
        "id": 34
      },
      "writtenOn": "2017-04-25T03:23:29Z",
      "side": 1,
      "message": "Throwing fatal or otherwise failing if wmfMasterDatacenter is not available is avoided by maintaining a default below, which is fine.\n\nHowever for ReadOnly, I\u0027m not sure null/false makes sense. Presumably if for some reason Etcd is unavailable for a short period of time, we should assume ReadOnly mode, right? Or does it not matter given that we still have MySQL as last layer of defence, which also has a read-only mode enforced that MediaWiki will find out about and cache accordingly (todo: Double-check that we a short-lived cache in APC or Memc for if mysql responds with read-only.)",
      "range": {
        "startLine": 78,
        "startChar": 39,
        "endLine": 78,
        "endChar": 44
      },
      "revId": "8392203b4950eaa0fe178779c4036ab3d48b274f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e506ba4_47b3affd",
        "filename": "wmf-config/CommonSettings.php",
        "patchSetId": 6
      },
      "lineNbr": 78,
      "author": {
        "id": 3215
      },
      "writtenOn": "2017-04-25T11:10:27Z",
      "side": 1,
      "message": "I think that having default values might be dangerous in the general case. While for ReadOnly a value of True might the right safe choice, for other configs it will easily be the wrong value compared to the Etcd value.\nHaving defaults here means that each time we change something in Etcd we still have to commit and deploy the affected configuration file to keep them in sync, defeating the purpose of a dynamic configuration.\nI think that the approach should be to transparently survive a temporarily Etcd failure just using stale configuration data from the cache and requiring a functioning Etcd on application restart, that is the same failure model that we have right now on pybal.\nWe have 2 independent clusters of Etcd, one in each main datacenter, with replication of the data.",
      "parentUuid": "4e506ba4_71a6a9bf",
      "range": {
        "startLine": 78,
        "startChar": 39,
        "endLine": 78,
        "endChar": 44
      },
      "revId": "8392203b4950eaa0fe178779c4036ab3d48b274f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e4df70f_5d2d2e8a",
        "filename": "wmf-config/CommonSettings.php",
        "patchSetId": 6
      },
      "lineNbr": 78,
      "author": {
        "id": 34
      },
      "writtenOn": "2017-04-27T01:08:32Z",
      "side": 1,
      "message": "Falling back to stale values seems sane, however I\u0027m not 100% sure EtcConfig in MediaWiki core will always fall back to it and keeps it indefinitely. I\u0027ll double check. This class really should have unit tests.",
      "parentUuid": "4e506ba4_47b3affd",
      "range": {
        "startLine": 78,
        "startChar": 39,
        "endLine": 78,
        "endChar": 44
      },
      "revId": "8392203b4950eaa0fe178779c4036ab3d48b274f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e506ba4_0796074f",
        "filename": "wmf-config/CommonSettings.php",
        "patchSetId": 6
      },
      "lineNbr": 83,
      "author": {
        "id": 3215
      },
      "writtenOn": "2017-04-25T11:10:27Z",
      "side": 1,
      "message": "ditto for the default value",
      "range": {
        "startLine": 83,
        "startChar": 51,
        "endLine": 83,
        "endChar": 56
      },
      "revId": "8392203b4950eaa0fe178779c4036ab3d48b274f",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}